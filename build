#!/usr/bin/env php
<?php

define('DS', DIRECTORY_SEPARATOR);

// ---------------------------------------------------------------------

function compressJS($path_gcc, $files = array(), $rootpath = '.', $externs = array()) {
	$compiler = 'java -jar ' . $path_gcc . ' --compilation_level ADVANCED_OPTIMIZATIONS ' .
		'--warning_level QUIET';
		
	echo "Compressing .js...\n  ";
		
	foreach($files as $js) {
		$file = realpath($rootpath . DS . $js);
		$basename = pathinfo($file, PATHINFO_BASENAME);
		
		if ('debug.js' === $basename) {
			continue;
		}
		
		echo $basename . ' ';
		
		$compiler .= ' --js ' . escapeshellarg($file);
	}
	
	echo "\n";

	foreach($externs as $extern) {
		$compiler .= ' --externs ' . escapeshellarg($extern);
	}
	
	return shell_exec($compiler);
}

function combineJS($files = array(), $rootpath = '.') {
	echo "Combining plain .js...\n  ";
	
	$result = '';
		
	foreach($files as $js) {
		$file = realpath($rootpath . DS . $js);
		$basename = pathinfo($file, PATHINFO_BASENAME);
		
		if ('debug.js' === $basename) {
			continue;
		}
		
		echo $basename . ' ';
		
		$result .= file_get_contents($file) . "\n";
	}
	
	echo "\n";

	return $result;
}

function compressCSS($path_yui, $files = array(), $rootpath = '.') {
	$compiler = 'java -jar ' . $path_yui . ' ';
		
	echo "Compressing .css...\n  ";
	
	$content = '';
		
	foreach($files as $css) {
		$file = realpath($rootpath . DS . $css);
		$basename = pathinfo($file, PATHINFO_BASENAME);
		
		echo $basename . ' ';
		
		$content .= file_get_contents($file);
	}
	
	echo "\n";
	
	$tmppath = sys_get_temp_dir() . DS . 'temp.css';
	
	file_put_contents($tmppath, $content);

	$compiler .= escapeshellarg($tmppath);
	$result = shell_exec($compiler);
	
	unlink($tmppath);

	return $result;
}

// ---------------------------------------------------------------------

// находим то, что нам нужно найти

$rootpath  = dirname(__FILE__) . DS . 'src' . DS;
$operapath = $rootpath . 'opera' . DS;
$toolspath = dirname(__FILE__) . DS . 'tools' . DS;

$externs = explode("\n", trim(shell_exec('find ' . escapeshellarg($toolspath . 'externs' . DS) . ' -name *.js')));

// если инструменты для сжатия не найдены - качаем

if ('' == exec('find ' . escapeshellarg($toolspath) . ' -name gcc.jar')) {
	echo "Tools not found. Preparing...\n";

	$cwd = getcwd();
	chdir($toolspath);
	system('./prepare');
	chdir($cwd);
}

$path_gcc    = escapeshellarg(trim(`find ./ -name 'gcc.jar'`));
$path_yui    = escapeshellarg(trim(`find ./ -name 'yui.jar'`));

// создаем временную папку для расширения

$tmppath = sys_get_temp_dir() . DS . 'habrafix' . DS;
mkdir($tmppath);

// ---------------------------------------------------------------------

echo "manifest.json\n=============\n";
$manifest = file_get_contents($rootpath . 'manifest.json');

$manifestObject = json_decode($manifest, true);

$version = $manifestObject['version'];
echo 'Version: ' . $version . "\n";

$urls = $manifestObject['content_scripts'][0]['matches'];
echo "Extension will work on these urls:\n";

foreach($urls as $url) {
	echo '  ' . $url . "\n";
}

echo "\nBuilding Chrome extension...\n============================\n";

$scripts =& $manifestObject['content_scripts'][0];

$css = compressCSS($path_yui, $scripts['css'], $rootpath);
file_put_contents($tmppath . 'habrafix.css', $css);

$js  = compressJS($path_gcc,  $scripts['js'],  $rootpath, $externs);
file_put_contents($tmppath . 'habrafix.js', $js);

$scripts['js']  = array('habrafix.js');
$scripts['css'] = array('habrafix.css');

echo "Preparing background page\n";
$backgroundPage = $manifestObject['background_page'];
$background = file_get_contents($rootpath . $backgroundPage);

if (preg_match_all('@script src="(.*?)"@', $background, $matches)) {
	$cm = array_pop($matches);
	
	$compiler = 'java -jar ' . $path_gcc . ' --compilation_level ADVANCED_OPTIMIZATIONS ' .
		'--warning_level QUIET';
		
	$backjs = compressJS($path_gcc, $cm, $rootpath, $externs);

	$background = '<html><body><script>' . $backjs . '</script></body></html>';
	
	file_put_contents($tmppath . $backgroundPage, $background);
}

$manifestOut = json_encode($manifestObject);
$manifestOut = str_replace('\/', '/', $manifestOut);

file_put_contents($tmppath . 'manifest.json', $manifestOut);

// копируем иконки
shell_exec('cp -R ' . escapeshellarg($rootpath . 'icons') . ' ' . escapeshellarg($tmppath));

$cwd = getcwd();

chdir($tmppath);

echo "Compressing extension\n";
$cmd = 'zip -9 -r ' . escapeshellarg($cwd . DS . 'ext.zip') . ' ./';
shell_exec($cmd);

chdir($cwd);

shell_exec('rm -rf ' . escapeshellarg($tmppath));

echo "Done\n";

echo "\nBuilding Opera extension...\n===========================\n";

mkdir($tmppath);

$desc = json_decode(file_get_contents($operapath . 'desc.json'), true);

$cssjs = file_get_contents($operapath . 'css.js');

$css = compressCSS($path_yui, $desc['css'], $operapath);
$cssjs = str_replace('%CSS%', $css, $cssjs);

$tempJSFile = $tmppath . 'css.js';
file_put_contents($tempJSFile, $cssjs);

$userJS = '// ==UserScript==';

foreach($urls as $url) {
	$userJS .= '
// @include ' . $url;
}

$userJS .= '
// ==/UserScript==
';

$jsFiles = $desc['js'];


$js         = compressJS($path_gcc,  $jsFiles,  $operapath, $externs);
$jsOperaMod = combineJS($jsFiles, $operapath);
	
$js = $userJS . '
document.addEventListener(\'DOMContentLoaded\', function() {
' . $js . '
}, false );';

$jsOperaMod = $userJS . '
document.addEventListener(\'DOMContentLoaded\', function() {
' . $jsOperaMod . '
}, false );';

$js .= '( function() { ' . compressJS($path_gcc, array($tempJSFile), '', $externs) . ' } )()';

$jsOperaMod .= "\n
( function() { " . file_get_contents($tempJSFile) . ' } )()';

shell_exec('rm ' . escapeshellarg($tmppath) . '*');

mkdir($tmppath . 'includes'); 

file_put_contents($tmppath . 'includes' . DS . 'script.js', $js);
file_put_contents($tmppath . 'includes' . DS . 'script.uncompressed', $jsOperaMod);

$config = file_get_contents($operapath . 'config.xml');
$config = str_replace('%VER%', $version, $config);

file_put_contents($tmppath . 'config.xml', $config);

copy($rootpath . 'icons' . DS . '64.png', $tmppath . 'icon.png');
copy($operapath . 'index.html', $tmppath . 'index.html');

$cwd = getcwd();

chdir($tmppath);

echo "Compressing extension\n";
$cmd = 'zip -9 -r ' . escapeshellarg($cwd . DS . 'ext.oex') . ' ./';
shell_exec($cmd);

chdir($cwd);

echo "Done\n";

shell_exec('rm -rf ' . escapeshellarg($tmppath));